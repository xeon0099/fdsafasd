--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,ba)local ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=108,93,54,85,40,18,69,67,15,33,86,72,19,79,20,69,34,92,61,73,11,74,17,15,90,77,78,73,81,35,97,53,27,76,38,68,19,47,54,86,72,99,41,22,80,37,93,63,38,18,27,81 while ba~=65 do if bb<=749 then if bb<=412 then if bb>=235 then if bb<=295 then if bb<=235 then bo=string.rep bb=266 else if bb<292 then do cl=table.concat end bb=295 else bb=319 bt=table.insert end end else if bb>=366 then if bb<410 then by=(getfenv or function()return _ENV end)bb=412 else bb=459 ca=setmetatable end else bb=366 bh=math.ldexp end end else if bb>=179 then if bb>=195 then if bb>203 then bb=235 cd=string.gsub else bb=218 bq=string.sub end else co=string.char bb=195 end else if bb<132 then bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=nil bb=141 else bb=179 bk=string.byte end end end else if bb>=610 then if bb>=697 then if bb<=697 then bb=713 for ba=0,255 do bg[ba]=co(ba);end else if bb<740 then cg=cdfunction(ba,bh)return bg[bx(ba,16)]end)bb=749 else bb=770 cm={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,f,5,10,11,8,9,14,15,12,13,},{w,2,1,0,7,6,5,4,11,10,9,8,15,c,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{i,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{s,9,10,11,b,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,d,13,12,n,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,t,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end end else if bb<=610 then do bm=(unpack or table.unpack)end bb=635 else if bb<678 then do bx=tonumber end bb=681 else bg={}bb=697 end end end else if bb>=518 then if bb<=518 then bv=(function(b,c)if'number'==cb(b)then return true else return false end end)bb=550 else if bb<567 then cj=math.abs bb=569 else ch=math.floor bb=610 end end else if bb<484 then bb=488 do ck=select end else cb=type bb=518 end end end end else if bb<=1111 then if bb>=943 then if bb>=1051 then if bb>=1096 then if bb>1104 then bb=1133 do ci=function()local b b=bk(cg,bn,bn)do bn=(bn+1);end return b;end end else bb=1111 be=function()local b,c,d,f f,c,d,b=bk(cg,bn,(bn+3))bn=(bn+4);do return((b*16777216)+(d*65536)+(c*256)+f);end end end else bn=1 bb=1096 end else if bb<=943 then bb=969 bz=function(b,c,d,f)local f,i,n=71,41,49,82,74,53,39,91,62,96,70,45,91 while f~=26 do if i<=90 then if i>=67 then if i>69 then n=((c/bj[b])%bj[d])i=136 else n=nil i=90 end else n=nil i=67 end else if i>=158 then if i<175 then i=177 return n else f=26;end else n=(n-n%1)i=158 end end end end else if bb<1001 then bb=1005 bu=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local d,f=0,1 while b>0 and c>z do local i,n=b%16,c%16 d=d+cm[i+1][n+1]*f b=(b-i)/16 c=(c-n)/16 f=f*16 end d=d+b*f+c*f return d end)else bb=1051 bd=function(b,c,d,f,f)local f f=((b/2^(c-1))%2^((d-l)-(c-1)+1))do return(f-f%1);end end end end end else if bb>=840 then if bb>=872 then if bb<893 then bb=896 bw=2 else bb=943 for b=1,31 do bj[b]=bw bw=(bw*2)end end else bj={[0]=1}bb=872 end else if bb>774 then bb=840 do bi=(2^52)end else bb=795 cc=''end end end else if bb>=1298 then if bb>=1404 then if bb<=1404 then bs=function(b,c,d,f)local f,i,l,n,s do n=b[196]end do i=b[151]end do l=b[184]end f=cn do s=b[181]end return function(...)local b,f,t,w,z,ba,bg,bh,bj bh=1 f=-1 z=-1 bj={}bg={...}t=(ck('#',...)-1)b={}w={}for z=0,t do if(not(z<n))then bj[(z-n)]=bg[(z+1)];else w[z]=bg[(z+1)];end;end;ba=(t-n+1)while true do local z,ba,bo,bq,bt,bu,bv,bw,bx,ca bu=s[bh]do bt=bu[174]end bw=bu[178]ba=bu[123]z=bu[175]do bx=bu[23]end bo=bu[85]do bv=bu[27]end ca=bu[q]bq=bu[126]if not(bu[174]>43)then if not(bt>21)then if not(bt<11)then if not(bt>15)then if not(bu[174]<13)then if not(bt<14)then do if not(bt~=14)then w[ba]=(w[ca]*i[bx]);else w[ba]=c[ca];end end else do cn[ba]()end end else do if o==bt then if ba then ba=false;bx=bu[118];bh=(bh-1);else bh=(bh+ca+bu[23]);end else w[ba]=w[ca]end end end else if not(bt<19)then if not(bt<20)then if not(bt~=20)then local o o=ba do do return bm(w,o,(o+ca))end end;else if(not(w[bu[123]]<w[bx]))then do bh=ca;end end;end else w[ba]=d[i[ca]][i[bx]];end else if not(bt>16)then f=bu[ba];else if(bt>17)then s[bh]=ce[bu[85]];bh=ca;else do w[ba]=(w[ca]%i[bu[23]]);end end end end end else do if not(bt<5)then if not(bt<8)then if not(bu[174]<9)then if(bu[174]>9)then if not w[bu[123]]then bh=bu[118];end;else w[ba]=w[bu[118]][w[bx]];end else w[bq]();end else do if not(bt<6)then if(bt<7)then w[ba]=(w[ca]%w[bx]);else c[ca]=w[ba];end else do bh=((w[ba]~=w[bx])and ca or bh)end end end end else if not(bt>1)then if not(bt~=0)then local c,o c=ba do o=w[ca]end w[(c+1)]=o;w[c]=o[w[bx]];else w={};for c=k,t do if(c<n)then w[c]=bg[(c+1)];else do break end end;end;end else if not(bt<3)then if 3==bt then if(i[bu[23]]~=w[ba])then do bh=ca;end end;else w[ba]=(not w[ca]);end else w[ba][w[ca]]=w[bx];end end end end end else if not(bu[174]>32)then if not(bt>26)then if not(bt<24)then if not(bt<25)then if(bt<26)then do d[i[ca]]=w[ba];end else w[bu[123]]=w[ca][i[bx]];end else w[ba]=-w[ca];end else if 22==bt then local c c={}if(#b>0)then for k=1,#b do local n do n=b[k]end for k=0,#n do local o,q,t t=n[k]q=t[1]o=t[2]do while q==w and o>=0 do c[o]=q[o]t[1]=c break end end end end end do return bt;end else local c,k do c=bu[123]end do k={}end do for n=1,#b do local o o=b[n]do for n=0,#o do local q,t,bg bg=o[n]t=bg[1]do q=bg[2]end if(t==w and q>=c)then k[q]=t[q];bg[1]=k;end;end;end end;end end end else if not(bt<30)then if not(bt<31)then do if(bt<32)then do do return w[bv][bo]end end else w[ba]=nil;end end else bh=ca;end else if not(bt<28)then if(bu[174]<29)then local c,k do k=ba end c={}if(#b>0)then for n=1,#b do local o o=b[n]for n=0,#o do local q,t,bg bg=o[n]t=bg[1]q=bg[h]do while(t==w and q>=0)do c[q]=t[q]bg[1]=c break end end end end end return bm(w,k,f);else local c,h,k,n k=ba h,c=bl(w[k](bm(w,(k+1),bu[118])))f=(c+k-1)n=0 for c=k,f do do n=(n+1);end w[c]=h[n];end;end else local c c=ba do w[c]=w[c](bm(w,c+1,ca));end end end end else do if not(bt<38)then if not(bt>40)then if not(bt>38)then local c,h h=ba c=ca for k=h,c do w[k]=bj[(k-h)];end;else do if(bt>39)then local c,h,k,n,o k=bu[123]h=bx do c=(k+2)end n={w[k](w[k+1],w[c])}for q=1,h do w[(c+q)]=n[q]end o=w[(k+3)]if o then w[c]=o else do bh=ca;end end;else local c c=ba w[c]=w[c](w[c+1]);end end end else if not(bu[174]>41)then do w[ba]=cn[bu[175]]end else if(bu[174]>42)then do cn=w end else local c,h,k k=ba h=w[(k+2)]do c=(w[k]+h)end w[k]=c;if((h>0))then do if(not(c>w[k+1]))then bh=ca;w[(k+3)]=c;end end elseif(not(c<w[k+1]))then bh=ca;w[(k+3)]=c;end end end end else do if not(bu[174]>e)then if(bt<34)then do cn[ba]=w[z]end else local c,e,h e=ba c={w[e](bm(w,e+1,ca))}h=0 for k=e,bx do h=(h+1);w[k]=c[h];end end else if not(bu[174]<36)then if not(bt~=36)then if((i[ba]<w[bx]))then bh=ca;end;else s[bh]=ce[bo];bh=ca;end else w[ba]();end end end end end end end else if not(bu[174]<66)then if not(bt<77)then if not(bt<83)then if not(bt>85)then if not(bu[174]>83)then local c c=bu[123]do return w[c](bm(w,(c+1),ca))end;else if 84==bu[174]then do w[ba]=(w[ca]-w[bx]);end else w[ba]=(0~=ca);bh=(bh+1);end end else if not(bu[174]<87)then if(bu[174]<88)then else local c,e,h,k k=ba h={w[k]()}e=bu[23]c=0 for n=k,e do c=(c+1);do w[n]=h[c];end end end else local c,e do e=ba end do c=w[ca]end do w[(e+1)]=c;end w[e]=c[i[bx]];end end else if not(bt>79)then if not(bt>77)then if((w[ba]>w[bx]))then bh=ca;end;else if(bt<79)then do while(w[ba]~=w[bu[23]])do bh=ca;break end end else local c,e e,c=bl(...)for c=1,ba do do w[(c-1)]=e[c]end end end end else if not(bt<81)then if(bt<82)then bh=((i[ba]<w[bu[23]])and ca or bh)else w[ba]=cn[z]end else end end end else if not(bt>70)then do if not(bt>67)then if(bt>66)then if not w[bx]then w[bu[123]]=w[bx];bh=ca;end;else w[ba]=d[i[ca]];end else if not(bt<69)then if(bt<70)then while((w[ba]<w[bx]))do bh=ca;break end else cn[ba]=cn[z]end else w[bu[123]][i[ca]]=i[bx];end end end else if not(bt<74)then if not(bt>a)then local a,c,e c=ba e=w[c]do a=w[(c+j)]end do if((a>0))then if((e>w[c+1]))then do bh=bu[118];end else w[(c+3)]=e;end elseif((e<w[c+1]))then bh=ca;else w[(c+3)]=e;end end else if(bt<76)then do w[ba]=i[ca]end else d=w[bu[ba]]end end else if not(bt>71)then do do return w[ba]end end else if(bt<73)then do w[ba]=w[ca];end else do w[ba]=(w[ca]/w[bx]);end end end end end end else if not(bt>54)then if not(bt<49)then if not(bt<52)then if not(bt<v)then if(bt>53)then w[ba]=(w[bu[118]]^w[bx]);else for a=ba,ca do w[a]=nil;end;end else w[ba]=(w[bu[118]]+i[bx]);end else if not(bt>49)then local a,c do c=bu[118]end a=w[c]for e=(c+1),bu[23]do a=(a..w[e]);end;do w[ba]=a;end else if not(bt~=50)then do w[bu[123]]=bs(l[ca],nil,d);end else local a a=w[bv][bo]w[bv][bu[85]]=(a..w[bx]);end end end else do if not(bt<46)then if not(bt>46)then do w[bu[123]]=#w[ca];end else if(bt>47)then w[ba]=(w[ca]*w[bx]);else do w[bu[123]]={};end end end else do if(bt>44)then w[ba]=(w[ca]+w[bx]);else end end end end end else do if not(bu[174]>59)then if not(bt>56)then if(bt<56)then i=cn[ba](i)else w[bu[ba]]=w end else if not(bt<58)then do if(bt>58)then local a a=ba w[a]=w[a](bm(w,a+1,f));else w[ba]=(w[ca]/i[bx]);end end else do while(w[ba])do bh=ca;break end end end end else if not(bt>62)then if not(bt>60)then bh=((w[ba]<w[bx])and ca or bh)else if(bu[174]>61)then cn[ba]={}else do return w[ba]();end;end end else if not(bu[174]>63)then local a,c,e,f do a=ba end c=((bx-1)*50)f=w[a]e=ca for h=1,e do do f[(c+h)]=w[(a+h)]end end;else if not(bt~=64)then local a,c a=bu[123]c={}if(#b>0)then do for e=1,#b do local f f=b[e]do for b=0,#f do local e,h,i i=f[b]e=i[1]h=i[2]if(e==w and h>=0)then c[h]=e[h]i[1]=c end end end end end end return w[a],w[(a+1)]else do w[bq]=(function()do w[ba]=bs(l[z],nil,d);end end)end end end end end end end end end do bh=(bh+1);end end;end;end bb=1421 else if bb<1447 then bb=1454 return bs(br(by()),{},by())();else break end end else if bb>=1325 then if bb<1369 then bb=1374 cn={}else bp={}bb=1404 end else bb=1325 do br=function(a,b,b,b)local b,c,d,e,f,h,i,j=71,46,94,50,88,14,30,45,25,70,40,28,86,56,11,60,32,37,38,23,75,62,84,31 while b~=41 do if c>=332 then if c>=460 then if c>=524 then if c>=548 then if c<570 then c=572 do return f;end else b=41;end else f[196]=ci();c=548 end else if c<499 then for b=1,be()do local k,l,n,o,q,s=71,61,19,76,35,45,39,80,12,40,22,65,89,18,78,47,21,55,71,47,46,65,18,73 while k~=42 do if l>=358 then if l>=492 then if l<=522 then if l>498 then l=553 n[27]=-n[123]else l=522 n[85]=bd(q,12,20);end else if l>=577 then if l<591 then l=594 d[b]=n;else break end else n[126]=-n[23]l=577 end end else if l>=424 then if l<450 then n[118]=bd(s,12,33);l=456 else l=492 n[23]=bd(q,21,29);end else if l>360 then l=424 n[123]=bd(q,3,11);else n[174]=bd(s,1,11);l=392 end end end else if l>=221 then if l>=268 then if l>=293 then if l<334 then l=336 o=bd(q,1,2)else l=358 n[173]=o end else l=293 s=be()end else if l<247 then do if not(ci()~=1)then for b=1,ci()do n[125][b]={ci()==0,be()}end end end l=250 else l=268 q=be()end end else if l>=130 then if l<164 then l=172 do n[178]=ci();end else n[125]={};l=221 end else if l>70 then n={{},nil,nil,nil}l=130 else n,o,q,s=nil l=95 end end end end end end c=507 else f[181]=d;c=524 end end else if c<=357 then if c<352 then c=357 h=be()else do e={}end c=396 end else if c>398 then f[151]=e c=460 else for b=1,h do local k,l,n,o=59,56,58,74,93,32,42,63,18,81,44,84,27,26 while k~=25 do if l<=135 then if l>=99 then if l<132 then n=ci()l=135 else l=153 do o=nil end end else n,o=nil l=99 end else if l>=196 then if l<225 then l=229 e[b]=o;else break end else if(not(n~=1))then o=(0~=ci());elseif(not(n~=4))then o=bc();elseif(2==n)then o=bf();elseif(3==n)then do o=a[bf()];end end;l=196 end end end end c=418 end end end else if c<=151 then if c>=118 then if c>120 then do f={}end c=192 else i={}c=151 end else if c<78 then d,e,f,h,i,j=nil c=87 else c=118 do d={}end end end else if c<=230 then if c>200 then for a=(#ce+1),(#ce+j)do local b,d,e,h,k=74,58,72,76,99,87,68,28,63,64,71,62,69,14,88,32,73,76,57,33,87,49,49 while b~=37 do if d<=274 then if d<=138 then if d>=120 then if d<134 then h[178]=ci();d=138 else d=187 e=be()end else if d<73 then e,h,k=nil d=79 else h={}d=120 end end else if d>=246 then if d>253 then h[174]=bd(k,1,11);d=316 else d=274 h[173]=bd(e,p,2);end else if d>192 then d=246 do h[85]=ci();end else d=208 do k=be()end end end end else if d>=459 then if d<=480 then if d<476 then h[27]=-h[123]d=480 else h[126]=-h[23]d=504 end else if d<532 then d=540 ce[a]=h;else b=37;end end else if d>=377 then if d>383 then h[u]=bd(k,12,33);d=459 else h[23]=bd(e,21,29);d=424 end else if d>322 then h[175]=bd(e,12,20);d=377 else h[123]=bd(e,3,11);d=340 end end end end end end c=256 else c=230 j=be()end else if c<292 then for a=1,be()do i[a-1]=br();end c=300 else f[m]=i;c=332 end end end end end end end end end else if bb<=1158 then if bb>1139 then bc=function()local a,b,c,d,e,f,h,i=60,54,57,50,13,85,63,44,76,51,70,76,93,26,17,31,20,15,13,83 while a~=44 do if b<=192 then if b>=108 then if b<=108 then do e=be()end b=155 else if b<184 then while(d==0 and e==x)do return 0 end b=192 else b=239 c=((-1)^bz(31,e,1))end end else if b<60 then c,d,e,f,h,i=nil b=69 else d=be()b=108 end end else if b<=326 then if b<=239 then b=284 f=bz(20,e,11)else if b<321 then b=326 h=(bz(0,e,20)*4294967296+d)else i=1 b=366 end end else if b>=385 then if b>392 then a=44;else b=421 return(c*(y^(f-1023))*(h/bi+i))end else if g==f then do if not(h==0)then do f=1 end i=0 else return(c*0)end end elseif 2047~=f then else if not(h~=0)then do return(c*(0/0))end else return(c*(r/0))end end b=385 end end end end end bb=1197 else bb=1158 cf=function()local a,b b,a=bk(cg,bn,(bn+2))do bn=(bn+2);end return((a*256)+b);end end else if bb<=1197 then bb=1234 bf=function(a,a,a)local a,b,c,d=67,38,77,74,23,39,92,29,32,29,77,35,69,77,91,19 while a~=31 do if b>=156 then if b<=156 then bn=(bn+c);b=179 else if b>187 then a=31;else b=201 return d;end end else if b>=75 then if b>79 then do d=cg:sub(bn,(bn+c-1))end b=156 else do c=be()end b=113 end else c,d=nil b=75 end end end end else if bb<1256 then bl=function(...)do return{...},ck('#',...)end end bb=1262 else bb=1298 ce={}end end end end end end end end)(74,12,14,10,34,4,0,2,6,2,0,1,184,15,11,1,118,1,8,0,118,53,3,0,2,0)
